services:
  postgres:
    image: ghcr.io/orion6dev/pg-german:local
    command: postgres -c 'max_connections=2000'
    container_name: postgres
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=test*12*
      - POSTGRES_DB=postgres
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_SCHEMA=public
      - POSTGRES_SSLMODE=Disable
    volumes:
      - postgresql_etc:/etc/postgresql
      - postgresql_log:/var/log/postgresql
      - postgresql_lib:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data  # Explicitly manage the PGDATA directory 
      - ./test-ssh/id_ed25519_test.pub:/home/postgres/.ssh/authorized_keys:ro

  pgbackrest:
    image: woblerr/pgbackrest:2.52
    environment:
      BACKREST_UID: 1001
      BACKREST_GID: 1001
    volumes:
      - ./test-ssh/id_ed25519_test:/home/pgbackrest/.ssh/id_ed25519_test:ro
      - ./test-ssh/id_ed25519_test.pub:/home/pgbackrest/.ssh/id_ed25519_test.pub:ro
      - ./support/pgbackrest/pgbackrest.conf:/etc/pgbackrest/pgbackrest.conf:ro
      - pgbackrest:/var/lib/pgbackrest
    entrypoint: ["pgbackrest"]
    depends_on:
      - postgres

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: on-failure
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: test@feuerfest.dev
      PGADMIN_DEFAULT_PASSWORD: test*12*
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  # Network Multitool: A swiss army knife Docker container for network troubleshooting and debugging.
  # Documentation: https://github.com/Praqma/Network-MultiTool
  # $ docker exec -it network-multitool /bin/bash
  network-multitool:
    image: wbitt/network-multitool:extra
    container_name: network-multitool

volumes:
  pgadmin-data:
    driver: local
  postgresql_etc:
    driver: local
  postgresql_log:
    driver: local
  postgresql_lib:
    driver: local
  postgresql_data:
    driver: local  
  pgbackrest:
    driver: local  
